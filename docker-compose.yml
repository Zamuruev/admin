version: '3.8'

services:
  gateway:
    build: ./Gateway
    container_name: gateway
    ports:
      - "8080:8080"
    networks:
      - microservices-net
    depends_on:
      - domain-service
      - redis
      - logstash
      - rabbitmq
      - prometheus
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DOMAIN_SERVICE_HOST: domain-service
      DOMAIN_SERVICE_PORT: 9091

  domain-service:
    build: ./domain
    container_name: domain-service
    ports:
      - "9091:9091"
    networks:
      - microservices-net
    depends_on:
      - postgres

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - microservices-net

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: roman
      POSTGRES_PASSWORD: zamuruev
      POSTGRES_DB: movies
    ports:
      - "5432:5432"
    networks:
      - microservices-net

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservices-net

  logstash:
    image: logstash:7.17.0
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
    networks:
      - microservices-net
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xmx256m -Xms256m
    ports:
      - "9200:9200"
    networks:
      - microservices-net
    volumes:
      #- /path/to/storage:/usr/share/elasticsearch/data
      - es-data:/usr/share/elasticsearch/data

  kibana:
    image: kibana:7.17.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - microservices-net


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - microservices-net

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  es-data:
    driver: local